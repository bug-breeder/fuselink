name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'
        cache-dependency-path: app/yarn.lock

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Type check
      run: yarn typecheck

    - name: Lint
      run: yarn lint

    - name: Unit tests
      run: yarn test:run

    - name: Build
      run: yarn build

    - name: Install Playwright browsers
      run: yarn playwright install --with-deps

    - name: E2E tests
      run: yarn test:e2e

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: app/playwright-report/
        retention-days: 30

  backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: fuselink_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install dependencies
      run: make deps

    - name: Install sqlc
      run: go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest

    - name: Install migrate
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.16.2/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate /usr/local/bin/migrate

    - name: Generate sqlc code
      run: make sqlc

    - name: Run migrations
      run: make migrate-up
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/fuselink_test?sslmode=disable

    - name: Run tests
      run: make test
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/fuselink_test?sslmode=disable

    - name: Build
      run: make build

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: always()
      with:
        file: ./server/coverage.out
        flags: backend

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'